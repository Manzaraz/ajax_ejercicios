<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WordPres REST API</title>
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap" rel="stylesheet">
    <style>
        html {
            box-sizing: border-box;
            font-family: 'Raleway', sans-serif;
            font-size: 16px;
        }
        *, *:after, *:before {
            box-sizing: inherit;
        }
        
        a {
            color: #01579b;
            transition: all .4s ease-in-out;
        }
        a:hover {
            opacity: .75;
        }
        img {
            max-width: 100%;
            height: auto;
        }
        h1 {
            text-align: center;
        }
        hr {
            border: thin solid #01579b;
            margin: 3rem auto;
            width: 80%;
        }
        .loader {
            display: none;
            margin: 2rem auto;
        }
        .navbar {
            padding: .75rem;
            position: static;
            color: #e3f2fd;
            background-color: #0099ff;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 900'%3E%3Cdefs%3E%3CradialGradient id='a' cx='800' cy='371' r='70%25' gradientUnits='userSpaceOnUse'%3E%3Cstop offset='0' stop-color='%230099ff'/%3E%3Cstop offset='1' stop-color='%2304C'/%3E%3C/radialGradient%3E%3CradialGradient id='b' cx='800' cy='371' r='60%25' gradientUnits='userSpaceOnUse'%3E%3Cstop offset='0' stop-color='%230EF' stop-opacity='1'/%3E%3Cstop offset='1' stop-color='%230EF' stop-opacity='0'/%3E%3C/radialGradient%3E%3C/defs%3E%3Crect fill='url(%23a)' width='1600' height='900'/%3E%3Cg fill='none' stroke='%2303E' stroke-width='10' stroke-miterlimit='10' stroke-opacity='.5'%3E%3Cpolygon points='2277.4 1152 800-1407-677.4 1152'/%3E%3Cpolygon points='800-1372.9-648.8 1136.5 2248.8 1136.5'/%3E%3Cpolygon points='800-1338.8-620.2 1121.1 2220.2 1121.1'/%3E%3Cpolygon points='800-1304.7-591.6 1105.6 2191.6 1105.6'/%3E%3Cpolygon points='800-1270.6-563 1090.2 2163 1090.2'/%3E%3Cpolygon points='800-1236.5-534.4 1074.7 2134.4 1074.7'/%3E%3Cpolygon points='800-1202.4-505.8 1059.3 2105.8 1059.3'/%3E%3Cpolygon points='800-1168.3-477.2 1043.8 2077.2 1043.8'/%3E%3Cpolygon points='800-1134.2-448.6 1028.4 2048.6 1028.4'/%3E%3Cpolygon points='800-1100.1-420 1012.9 2020 1012.9'/%3E%3Cpolygon points='800-1066-391.4 997.5 1991.4 997.5'/%3E%3Cpolygon points='800-1031.9-362.7 982 1962.7 982'/%3E%3Cpolygon points='800-997.8-334.1 966.6 1934.1 966.6'/%3E%3Cpolygon points='800-963.7-305.5 951.1 1905.5 951.1'/%3E%3Cpolygon points='800-929.6-276.9 935.7 1876.9 935.7'/%3E%3Cpolygon points='800-895.5-248.3 920.2 1848.3 920.2'/%3E%3Cpolygon points='800-861.4-219.7 904.7 1819.7 904.7'/%3E%3Cpolygon points='800-827.3-191.1 889.3 1791.1 889.3'/%3E%3Cpolygon points='800-793.2-162.5 873.8 1762.5 873.8'/%3E%3Cpolygon points='800-759.1-133.9 858.4 1733.9 858.4'/%3E%3Cpolygon points='800-725-105.3 842.9 1705.3 842.9'/%3E%3Cpolygon points='800-690.9-76.7 827.5 1676.7 827.5'/%3E%3Cpolygon points='800-656.8-48.1 812 1648.1 812'/%3E%3Cpolygon points='800-622.7-19.4 796.6 1619.4 796.6'/%3E%3Cpolygon points='800-588.6 9.2 781.1 1590.8 781.1'/%3E%3Cpolygon points='800-554.5 37.8 765.7 1562.2 765.7'/%3E%3Cpolygon points='800-520.5 66.4 750.2 1533.6 750.2'/%3E%3Cpolygon points='800-486.4 95 734.8 1505 734.8'/%3E%3Cpolygon points='800-452.3 123.6 719.3 1476.4 719.3'/%3E%3Cpolygon points='800-418.2 152.2 703.9 1447.8 703.9'/%3E%3Cpolygon points='800-384.1 180.8 688.4 1419.2 688.4'/%3E%3Cpolygon points='800-350 209.4 673 1390.6 673'/%3E%3Cpolygon points='800-315.9 238 657.5 1362 657.5'/%3E%3Cpolygon points='800-281.8 266.6 642 1333.4 642'/%3E%3Cpolygon points='800-247.7 295.2 626.6 1304.8 626.6'/%3E%3Cpolygon points='800-213.6 323.9 611.1 1276.1 611.1'/%3E%3Cpolygon points='800-179.5 352.5 595.7 1247.5 595.7'/%3E%3Cpolygon points='800-145.4 381.1 580.2 1218.9 580.2'/%3E%3Cpolygon points='800-111.3 409.7 564.8 1190.3 564.8'/%3E%3Cpolygon points='800-77.2 438.3 549.3 1161.7 549.3'/%3E%3Cpolygon points='800-43.1 466.9 533.9 1133.1 533.9'/%3E%3Cpolygon points='800-9 495.5 518.4 1104.5 518.4'/%3E%3Cpolygon points='800 25.1 524.1 503 1075.9 503'/%3E%3Cpolygon points='800 59.2 552.7 487.5 1047.3 487.5'/%3E%3Cpolygon points='800 93.3 581.3 472.1 1018.7 472.1'/%3E%3Cpolygon points='800 127.4 609.9 456.6 990.1 456.6'/%3E%3Cpolygon points='800 161.5 638.5 441.2 961.5 441.2'/%3E%3Cpolygon points='800 195.6 667.2 425.7 932.8 425.7'/%3E%3Cpolygon points='800 229.7 695.8 410.2 904.2 410.2'/%3E%3Cpolygon points='800 263.8 724.4 394.8 875.6 394.8'/%3E%3Cpolygon points='800 297.9 753 379.3 847 379.3'/%3E%3Cpolygon points='800 332 781.6 363.9 818.4 363.9'/%3E%3C/g%3E%3Crect fill-opacity='.5' fill='url(%23b)' width='1600' height='900'/%3E%3C/svg%3E");
            background-attachment: fixed;
            background-size: cover;

        }
        .site {
            margin: 1rem auto;
            padding: 1rem;
            max-width: 50%;
            text-align: center;
        }
        .post {
            margin: 1rem auto;
            padding: 1rem;
            border-radius: .5rem;
            max-width: 80%;
            text-align: center;
            background-color: #eceff1;
        }
        .post-author img {
            border-radius: 50%;
        }
        .post-date {
            margin: 1rem auto;
            display: block;
        }
        .post-excerpt, 
        .post-categories, 
        .post-tags, 
        .post-content {
            text-align: justify;
        }
        .post-content summary {
            font-size: 1.25rem;
            font-weight: bold;
        }
        .post-content>article {
            padding: 1rem;
            background-color: #e3f2fd;
        }
        .post-content img {
            display: block;
            margin: auto ;
        }

    </style>
</head>
<body>
    <header class="navbar">
        <h1>WordPress REST API</h1>
    </header>
    <article id="site" class="site"></article>
    <section id="posts" class="posts"></section>
    <img src="/assets/bars.svg" alt="Cargando..." class="loader">
    <template id="post-template">
        <article class="post">
            <img class="post-image">
            <aside>
                <h2 class="post-title"></h2>
                <figure class="post-author"></figure>
                <small class="post-date"></small>
                <a  class="post-link" target="_blanck" >Ver publicación original</a>
                <p class="post-excerpt"></p>
                <div class="post-categories"></div>
                <div class="post-tags"></div>
                <details class="post-content">
                    <summary>Ver contenido de la publicación</summary>
                    <article></article>
                </details>
            </aside>
        </article>
        <hr>
    </template>


    <script>
        const d = document,
            w = window,
            $site = d.getElementById("site"),
            $posts = d.getElementById("posts"),
            $loader = d.querySelector(".loader"),
            $template = d.getElementById("post-template").content,
            $fragment = d.createDocumentFragment(),
            DOMAIN = "https://css-tricks.com",
            SITE = `${DOMAIN}/wp-json`,
            API_WP = `${SITE}/wp/v2`,
            POSTS = `${API_WP}/posts?_embed`,
            PAGES = `${API_WP}/pages`,
            CATEGORIES = `${API_WP}/categories`;

        let page = 1,
            perPage = 5;
        function getSiteData() {
            fetch(SITE)
                .then((res) => res.ok ? res.json() : Promise.reject(res))
                .then((json) => {
                    console.log(json)
                    $site.innerHTML = `
                        <h3>Sitio Web</h3>
                        <h2>
                            <a href="${json.url}" target="_blank">${json.name}</a>
                        </h2>
                        <p>${json.description}</p>
                        <p>${json.timezone_string}</p>
                    `;
                })
                .catch((err) => {
                    console.log(err);
                    let message = err.statusText || "Ocurrió un error";
                    $site.innerHTML = `<p>Error ${err.status}: ${message} </p>`;
                })
        };

        function getPosts() {
            $loader.style.display = 'block';
            fetch(`${POSTS}&page=${page}&per_page${perPage}`)
                .then((res) => res.ok ? res.json() : Promise.reject(res))
                .then((json) => {
                    console.log(json)
                    
                    json.forEach(el => {
                        let categories = "",
                            tags = "";
                        el._embedded["wp:term"][0].forEach((el) => categories += `<li>${el.name}</li>`);
                        el._embedded["wp:term"][1].forEach((el) => tags += `<li>${el.name}</li>`);
                        
                        $template.querySelector(".post-image").src = el._embedded["wp:featuredmedia"] ? el._embedded["wp:featuredmedia"][0].source_url : "";
                        $template.querySelector(".post-image").alt = el.title.rendered;
                        $template.querySelector(".post-title").innerHTML = el.title.rendered;
                        $template.querySelector(".post-author").innerHTML = `
                        <img src="${el._embedded.author[0].avatar_urls["48"]}" alt="${el._embedded.author[0].name}" >
                        <figcaption >Por: ${el._embedded.author[0].name}</figcaption>
                        `;
                        $template.querySelector(".post-date").innerHTML = new Date(el.date).toLocaleString();
                        $template.querySelector(".post-link").href = el.link;
                        $template.querySelector(".post-excerpt").innerHTML = el.excerpt.rendered.replace("[&hellip;]", "...");
                        $template.querySelector(".post-categories").innerHTML = `
                            <p>Categorías</p>
                            <ul>${categories}</ul>
                        `;
                        $template.querySelector(".post-tags").innerHTML = `
                            <p>Etiquetas</p>
                            <ul>${tags}</ul>
                        `;
                        $template.querySelector(".post-content > article").innerHTML = el.content.rendered;
                        
                        let $clone = d.importNode($template,true);
                        $fragment.append($clone);
                    });
                    $posts.appendChild($fragment);

                    $loader.style.display = "none"
                })
                .catch((err) => {
                    console.log(err)
                    let message = err.statusText || "Ocurrió un error";
                    $posts.innerHTML = `<p>Error ${err.status}: ${message} </p>`;
                    $loader.style.display = "none";
                });
        };

        d.addEventListener("DOMContentLoaded", (e) => {
            getSiteData();
            getPosts();
        })
        w.addEventListener("scroll", (e) => {
            const { scrollTop, clientHeight, scrollHeight } = d.documentElement;
            // console.log(scrollTop, clientHeight, scrollHeight);

            if (scrollTop + clientHeight >= scrollHeight) {
                console.log("cargar mas posts");
                page++;
                getPosts();

            }
        })


    </script>
    
</body>
</html>